import"./index.html";import"./index.css";import{inputs,inputCompleteButton}from"../modules/variables";import{startInput,inputNum,inputHold,inputShortNum,inputInImg,defaultInput,inputError,inputDone,checkAllInputs,startWindowOutput,sliceValue}from"../modules/functions";import{verificationValue,verificationLength,verificationHold,verificationNum,verificationMM,verificationYY,checkMaxValue}from"../modules/verification";inputs.onpointerdown=function(t){if("buttonConfirm"!=t.target.id){if(t.target.type){const i=t.target;startInput(i),verificationValue(i)&&(i.value=""),i.onkeydown=function(t){if(verificationLength(i,t.key))return void t.preventDefault();const n=i.value.length;switch(i.name){case"inputNum":inputNum(t,i,n);break;case"inputHold":inputHold(t);break;case"inputCVC":case"inputMM":case"inputYY":inputShortNum(t)}},i.onkeyup=function(){checkMaxValue(i)?sliceValue(i):inputInImg(this)},i.onblur=function(){if(0!=i.value.length)if(verificationHold(i))inputError(i,"Incorrect value");else if(verificationMM(i))inputError(i,"Can't be blank");else{if(!verificationYY(i))return verificationNum(i)?void inputError(i,"Can't be blank"):void inputDone(i);inputError(i,"Can't be blank")}else defaultInput(i)}}}else checkAllInputs(t)},inputCompleteButton.onpointerdown=function(){startWindowOutput()};